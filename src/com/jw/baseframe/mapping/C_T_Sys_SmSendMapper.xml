<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jw.baseframe.dao.C_T_Sys_SmSendMapper" >
  <resultMap id="BaseResultMap" type="com.jw.baseframe.model.C_T_Sys_SmSend" >
    <id column="UUID" property="uuid" jdbcType="VARCHAR" />
    <result column="MOBILE" property="mobile" jdbcType="VARCHAR" />
    <result column="SEND_TIME" property="sendTime" jdbcType="VARCHAR" />
    <result column="SEND_UNITID" property="sendUnitid" jdbcType="VARCHAR" />
    <result column="SEND_UNITNAME" property="sendUnitname" jdbcType="NVARCHAR" />
    <result column="SEND_USER" property="sendUser" jdbcType="VARCHAR" />
    <result column="RECEIVE_UNITID" property="receiveUnitid" jdbcType="VARCHAR" />
    <result column="RECEIVE_UNITNAME" property="receiveUnitname" jdbcType="NVARCHAR" />
    <result column="RECEIVE_USER" property="receiveUser" jdbcType="VARCHAR" />
    <result column="SM_CONTENT" property="smContent" jdbcType="NVARCHAR" />
    <result column="SM_SPLIT" property="smSplit" jdbcType="DECIMAL" />
    <result column="SM_TYPE" property="smType" jdbcType="VARCHAR" />
    <result column="SEND_STATUS" property="sendStatus" jdbcType="VARCHAR" />
    <result column="IS_RECEIVE" property="isReceive" jdbcType="DECIMAL" />
    <result column="RECEIVE_FLAG" property="receiveFlag" jdbcType="VARCHAR" />
    <result column="IS_TIME" property="isTime" jdbcType="DECIMAL" />
    <result column="PLANSEND_TIME" property="plansendTime" jdbcType="VARCHAR" />
    <result column="UNIT_ID" property="unitId" jdbcType="VARCHAR" />
    <result column="EXPAND_XML" property="expandXml" jdbcType="VARCHAR" />
    <result column="IS_DELETE" property="isDelete" jdbcType="DECIMAL" />
    <result column="CREATE_USER" property="createUser" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="UPDATE_USER" property="updateUser" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    UUID, MOBILE, SEND_TIME, SEND_UNITID, SEND_UNITNAME, SEND_USER, RECEIVE_UNITID, RECEIVE_UNITNAME, 
    RECEIVE_USER, SM_CONTENT, SM_SPLIT, SM_TYPE, SEND_STATUS, IS_RECEIVE, RECEIVE_FLAG, 
    IS_TIME, PLANSEND_TIME, UNIT_ID, EXPAND_XML, IS_DELETE, CREATE_USER, CREATE_TIME, 
    UPDATE_USER, UPDATE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jw.baseframe.model.C_T_Sys_SmSendExample" >
    <foreach collection="example.oredCriteria" item="criteria" separator="or" />
    <if test="criteria.valid" >
      <foreach collection="criteria.criteria" item="criterion" >
        <if test="criterion.limitValue" >
          SELECT 
          <include refid="Base_Column_List" />
           FROM ( SELECT A.
          <include refid="Base_Column_List" />
           , ROWNUM AS con FROM ( 
        </if>
      </foreach>
    </if>
    select
    <if test="example.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from C_T_SYS_SMSEND
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
    <if test="criteria.valid" >
      <foreach collection="criteria.criteria" item="criterion" >
        <if test="criterion.limitValue" >
           ) A  <![CDATA[WHERE ROWNUM <= ${criterion.secondValue}]]> ) B <![CDATA[WHERE B.con >= ${criterion.value} ]]>
        </if>
      </foreach>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from C_T_SYS_SMSEND
    where UUID = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from C_T_SYS_SMSEND
    where UUID = #{uuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jw.baseframe.model.C_T_Sys_SmSendExample" >
    delete from C_T_SYS_SMSEND
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jw.baseframe.model.C_T_Sys_SmSend" >
    insert into C_T_SYS_SMSEND (UUID, MOBILE, SEND_TIME, 
      SEND_UNITID, SEND_UNITNAME, 
      SEND_USER, RECEIVE_UNITID, 
      RECEIVE_UNITNAME, RECEIVE_USER, 
      SM_CONTENT, SM_SPLIT, SM_TYPE, 
      SEND_STATUS, IS_RECEIVE, RECEIVE_FLAG, 
      IS_TIME, PLANSEND_TIME, UNIT_ID, 
      EXPAND_XML, IS_DELETE, CREATE_USER, 
      CREATE_TIME, UPDATE_USER, UPDATE_TIME
      )
    values (#{record.uuid,jdbcType=VARCHAR}, #{record.mobile,jdbcType=VARCHAR}, #{record.sendTime,jdbcType=VARCHAR}, 
      #{record.sendUnitid,jdbcType=VARCHAR}, #{record.sendUnitname,jdbcType=NVARCHAR}, 
      #{record.sendUser,jdbcType=VARCHAR}, #{record.receiveUnitid,jdbcType=VARCHAR}, 
      #{record.receiveUnitname,jdbcType=NVARCHAR}, #{record.receiveUser,jdbcType=VARCHAR}, 
      #{record.smContent,jdbcType=NVARCHAR}, #{record.smSplit,jdbcType=DECIMAL}, #{record.smType,jdbcType=VARCHAR}, 
      #{record.sendStatus,jdbcType=VARCHAR}, #{record.isReceive,jdbcType=DECIMAL}, #{record.receiveFlag,jdbcType=VARCHAR}, 
      #{record.isTime,jdbcType=DECIMAL}, #{record.plansendTime,jdbcType=VARCHAR}, #{record.unitId,jdbcType=VARCHAR}, 
      #{record.expandXml,jdbcType=VARCHAR}, #{record.isDelete,jdbcType=DECIMAL}, #{record.createUser,jdbcType=VARCHAR}, 
      #{record.createTime,jdbcType=VARCHAR}, #{record.updateUser,jdbcType=VARCHAR}, #{record.updateTime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jw.baseframe.model.C_T_Sys_SmSend" >
    insert into C_T_SYS_SMSEND
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="record.uuid != null" >
        UUID,
      </if>
      <if test="record.mobile != null" >
        MOBILE,
      </if>
      <if test="record.sendTime != null" >
        SEND_TIME,
      </if>
      <if test="record.sendUnitid != null" >
        SEND_UNITID,
      </if>
      <if test="record.sendUnitname != null" >
        SEND_UNITNAME,
      </if>
      <if test="record.sendUser != null" >
        SEND_USER,
      </if>
      <if test="record.receiveUnitid != null" >
        RECEIVE_UNITID,
      </if>
      <if test="record.receiveUnitname != null" >
        RECEIVE_UNITNAME,
      </if>
      <if test="record.receiveUser != null" >
        RECEIVE_USER,
      </if>
      <if test="record.smContent != null" >
        SM_CONTENT,
      </if>
      <if test="record.smSplit != null" >
        SM_SPLIT,
      </if>
      <if test="record.smType != null" >
        SM_TYPE,
      </if>
      <if test="record.sendStatus != null" >
        SEND_STATUS,
      </if>
      <if test="record.isReceive != null" >
        IS_RECEIVE,
      </if>
      <if test="record.receiveFlag != null" >
        RECEIVE_FLAG,
      </if>
      <if test="record.isTime != null" >
        IS_TIME,
      </if>
      <if test="record.plansendTime != null" >
        PLANSEND_TIME,
      </if>
      <if test="record.unitId != null" >
        UNIT_ID,
      </if>
      <if test="record.expandXml != null" >
        EXPAND_XML,
      </if>
      <if test="record.isDelete != null" >
        IS_DELETE,
      </if>
      <if test="record.createUser != null" >
        CREATE_USER,
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME,
      </if>
      <if test="record.updateUser != null" >
        UPDATE_USER,
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="record.uuid != null" >
        #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.sendTime != null" >
        #{record.sendTime,jdbcType=VARCHAR},
      </if>
      <if test="record.sendUnitid != null" >
        #{record.sendUnitid,jdbcType=VARCHAR},
      </if>
      <if test="record.sendUnitname != null" >
        #{record.sendUnitname,jdbcType=NVARCHAR},
      </if>
      <if test="record.sendUser != null" >
        #{record.sendUser,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveUnitid != null" >
        #{record.receiveUnitid,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveUnitname != null" >
        #{record.receiveUnitname,jdbcType=NVARCHAR},
      </if>
      <if test="record.receiveUser != null" >
        #{record.receiveUser,jdbcType=VARCHAR},
      </if>
      <if test="record.smContent != null" >
        #{record.smContent,jdbcType=NVARCHAR},
      </if>
      <if test="record.smSplit != null" >
        #{record.smSplit,jdbcType=DECIMAL},
      </if>
      <if test="record.smType != null" >
        #{record.smType,jdbcType=VARCHAR},
      </if>
      <if test="record.sendStatus != null" >
        #{record.sendStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.isReceive != null" >
        #{record.isReceive,jdbcType=DECIMAL},
      </if>
      <if test="record.receiveFlag != null" >
        #{record.receiveFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.isTime != null" >
        #{record.isTime,jdbcType=DECIMAL},
      </if>
      <if test="record.plansendTime != null" >
        #{record.plansendTime,jdbcType=VARCHAR},
      </if>
      <if test="record.unitId != null" >
        #{record.unitId,jdbcType=VARCHAR},
      </if>
      <if test="record.expandXml != null" >
        #{record.expandXml,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null" >
        #{record.isDelete,jdbcType=DECIMAL},
      </if>
      <if test="record.createUser != null" >
        #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null" >
        #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        #{record.updateTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jw.baseframe.model.C_T_Sys_SmSendExample" resultType="java.lang.Integer" >
    select count(*) from C_T_SYS_SMSEND
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update C_T_SYS_SMSEND
    <set >
      <if test="record.uuid != null" >
        UUID = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        MOBILE = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.sendTime != null" >
        SEND_TIME = #{record.sendTime,jdbcType=VARCHAR},
      </if>
      <if test="record.sendUnitid != null" >
        SEND_UNITID = #{record.sendUnitid,jdbcType=VARCHAR},
      </if>
      <if test="record.sendUnitname != null" >
        SEND_UNITNAME = #{record.sendUnitname,jdbcType=NVARCHAR},
      </if>
      <if test="record.sendUser != null" >
        SEND_USER = #{record.sendUser,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveUnitid != null" >
        RECEIVE_UNITID = #{record.receiveUnitid,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveUnitname != null" >
        RECEIVE_UNITNAME = #{record.receiveUnitname,jdbcType=NVARCHAR},
      </if>
      <if test="record.receiveUser != null" >
        RECEIVE_USER = #{record.receiveUser,jdbcType=VARCHAR},
      </if>
      <if test="record.smContent != null" >
        SM_CONTENT = #{record.smContent,jdbcType=NVARCHAR},
      </if>
      <if test="record.smSplit != null" >
        SM_SPLIT = #{record.smSplit,jdbcType=DECIMAL},
      </if>
      <if test="record.smType != null" >
        SM_TYPE = #{record.smType,jdbcType=VARCHAR},
      </if>
      <if test="record.sendStatus != null" >
        SEND_STATUS = #{record.sendStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.isReceive != null" >
        IS_RECEIVE = #{record.isReceive,jdbcType=DECIMAL},
      </if>
      <if test="record.receiveFlag != null" >
        RECEIVE_FLAG = #{record.receiveFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.isTime != null" >
        IS_TIME = #{record.isTime,jdbcType=DECIMAL},
      </if>
      <if test="record.plansendTime != null" >
        PLANSEND_TIME = #{record.plansendTime,jdbcType=VARCHAR},
      </if>
      <if test="record.unitId != null" >
        UNIT_ID = #{record.unitId,jdbcType=VARCHAR},
      </if>
      <if test="record.expandXml != null" >
        EXPAND_XML = #{record.expandXml,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null" >
        IS_DELETE = #{record.isDelete,jdbcType=DECIMAL},
      </if>
      <if test="record.createUser != null" >
        CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null" >
        UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update C_T_SYS_SMSEND
    set UUID = #{record.uuid,jdbcType=VARCHAR},
      MOBILE = #{record.mobile,jdbcType=VARCHAR},
      SEND_TIME = #{record.sendTime,jdbcType=VARCHAR},
      SEND_UNITID = #{record.sendUnitid,jdbcType=VARCHAR},
      SEND_UNITNAME = #{record.sendUnitname,jdbcType=NVARCHAR},
      SEND_USER = #{record.sendUser,jdbcType=VARCHAR},
      RECEIVE_UNITID = #{record.receiveUnitid,jdbcType=VARCHAR},
      RECEIVE_UNITNAME = #{record.receiveUnitname,jdbcType=NVARCHAR},
      RECEIVE_USER = #{record.receiveUser,jdbcType=VARCHAR},
      SM_CONTENT = #{record.smContent,jdbcType=NVARCHAR},
      SM_SPLIT = #{record.smSplit,jdbcType=DECIMAL},
      SM_TYPE = #{record.smType,jdbcType=VARCHAR},
      SEND_STATUS = #{record.sendStatus,jdbcType=VARCHAR},
      IS_RECEIVE = #{record.isReceive,jdbcType=DECIMAL},
      RECEIVE_FLAG = #{record.receiveFlag,jdbcType=VARCHAR},
      IS_TIME = #{record.isTime,jdbcType=DECIMAL},
      PLANSEND_TIME = #{record.plansendTime,jdbcType=VARCHAR},
      UNIT_ID = #{record.unitId,jdbcType=VARCHAR},
      EXPAND_XML = #{record.expandXml,jdbcType=VARCHAR},
      IS_DELETE = #{record.isDelete,jdbcType=DECIMAL},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jw.baseframe.model.C_T_Sys_SmSend" >
    update C_T_SYS_SMSEND
    <set >
      <if test="record.mobile != null" >
        MOBILE = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.sendTime != null" >
        SEND_TIME = #{record.sendTime,jdbcType=VARCHAR},
      </if>
      <if test="record.sendUnitid != null" >
        SEND_UNITID = #{record.sendUnitid,jdbcType=VARCHAR},
      </if>
      <if test="record.sendUnitname != null" >
        SEND_UNITNAME = #{record.sendUnitname,jdbcType=NVARCHAR},
      </if>
      <if test="record.sendUser != null" >
        SEND_USER = #{record.sendUser,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveUnitid != null" >
        RECEIVE_UNITID = #{record.receiveUnitid,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveUnitname != null" >
        RECEIVE_UNITNAME = #{record.receiveUnitname,jdbcType=NVARCHAR},
      </if>
      <if test="record.receiveUser != null" >
        RECEIVE_USER = #{record.receiveUser,jdbcType=VARCHAR},
      </if>
      <if test="record.smContent != null" >
        SM_CONTENT = #{record.smContent,jdbcType=NVARCHAR},
      </if>
      <if test="record.smSplit != null" >
        SM_SPLIT = #{record.smSplit,jdbcType=DECIMAL},
      </if>
      <if test="record.smType != null" >
        SM_TYPE = #{record.smType,jdbcType=VARCHAR},
      </if>
      <if test="record.sendStatus != null" >
        SEND_STATUS = #{record.sendStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.isReceive != null" >
        IS_RECEIVE = #{record.isReceive,jdbcType=DECIMAL},
      </if>
      <if test="record.receiveFlag != null" >
        RECEIVE_FLAG = #{record.receiveFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.isTime != null" >
        IS_TIME = #{record.isTime,jdbcType=DECIMAL},
      </if>
      <if test="record.plansendTime != null" >
        PLANSEND_TIME = #{record.plansendTime,jdbcType=VARCHAR},
      </if>
      <if test="record.unitId != null" >
        UNIT_ID = #{record.unitId,jdbcType=VARCHAR},
      </if>
      <if test="record.expandXml != null" >
        EXPAND_XML = #{record.expandXml,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null" >
        IS_DELETE = #{record.isDelete,jdbcType=DECIMAL},
      </if>
      <if test="record.createUser != null" >
        CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null" >
        UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=VARCHAR},
      </if>
    </set>
    where UUID = #{record.uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jw.baseframe.model.C_T_Sys_SmSend" >
    update C_T_SYS_SMSEND
    set MOBILE = #{record.mobile,jdbcType=VARCHAR},
      SEND_TIME = #{record.sendTime,jdbcType=VARCHAR},
      SEND_UNITID = #{record.sendUnitid,jdbcType=VARCHAR},
      SEND_UNITNAME = #{record.sendUnitname,jdbcType=NVARCHAR},
      SEND_USER = #{record.sendUser,jdbcType=VARCHAR},
      RECEIVE_UNITID = #{record.receiveUnitid,jdbcType=VARCHAR},
      RECEIVE_UNITNAME = #{record.receiveUnitname,jdbcType=NVARCHAR},
      RECEIVE_USER = #{record.receiveUser,jdbcType=VARCHAR},
      SM_CONTENT = #{record.smContent,jdbcType=NVARCHAR},
      SM_SPLIT = #{record.smSplit,jdbcType=DECIMAL},
      SM_TYPE = #{record.smType,jdbcType=VARCHAR},
      SEND_STATUS = #{record.sendStatus,jdbcType=VARCHAR},
      IS_RECEIVE = #{record.isReceive,jdbcType=DECIMAL},
      RECEIVE_FLAG = #{record.receiveFlag,jdbcType=VARCHAR},
      IS_TIME = #{record.isTime,jdbcType=DECIMAL},
      PLANSEND_TIME = #{record.plansendTime,jdbcType=VARCHAR},
      UNIT_ID = #{record.unitId,jdbcType=VARCHAR},
      EXPAND_XML = #{record.expandXml,jdbcType=VARCHAR},
      IS_DELETE = #{record.isDelete,jdbcType=DECIMAL},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=VARCHAR}
    where UUID = #{record.uuid,jdbcType=VARCHAR}
  </update>
</mapper>