<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jw.baseframe.dao.C_T_Sys_Login_InforMapper" >
  <resultMap id="BaseResultMap" type="com.jw.baseframe.model.C_T_Sys_Login_Infor" >
    <id column="UUID" property="uuid" jdbcType="VARCHAR" />
    <result column="LOGIN_USER_NAME" property="loginUserName" jdbcType="NVARCHAR" />
    <result column="USER_DEPT_ID" property="userDeptId" jdbcType="VARCHAR" />
    <result column="LOGIN_TIME" property="loginTime" jdbcType="VARCHAR" />
    <result column="LOGIN_IP" property="loginIp" jdbcType="VARCHAR" />
    <result column="LOGIN_MACADDRESS" property="loginMacaddress" jdbcType="VARCHAR" />
    <result column="EXPAND_XML" property="expandXml" jdbcType="NVARCHAR" />
    <result column="UNITID" property="unitid" jdbcType="VARCHAR" />
    <result column="IS_DELETE" property="isDelete" jdbcType="DECIMAL" />
    <result column="CREATE_USER" property="createUser" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="UPDATE_USER" property="updateUser" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    UUID, LOGIN_USER_NAME, USER_DEPT_ID, LOGIN_TIME, LOGIN_IP, LOGIN_MACADDRESS, EXPAND_XML, 
    UNITID, IS_DELETE, CREATE_USER, CREATE_TIME, UPDATE_USER, UPDATE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jw.baseframe.model.C_T_Sys_Login_InforExample" >
    <foreach collection="example.oredCriteria" item="criteria" separator="or" />
    <if test="criteria.valid" >
      <foreach collection="criteria.criteria" item="criterion" >
        <if test="criterion.limitValue" >
          SELECT 
          <include refid="Base_Column_List" />
           FROM ( SELECT A.
          <include refid="Base_Column_List" />
           , ROWNUM AS con FROM ( 
        </if>
      </foreach>
    </if>
    select
    <if test="example.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from C_T_SYS_LOGIN_INFOR
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
    <if test="criteria.valid" >
      <foreach collection="criteria.criteria" item="criterion" >
        <if test="criterion.limitValue" >
           ) A  <![CDATA[WHERE ROWNUM <= ${criterion.secondValue}]]> ) B <![CDATA[WHERE B.con >= ${criterion.value} ]]>
        </if>
      </foreach>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from C_T_SYS_LOGIN_INFOR
    where UUID = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from C_T_SYS_LOGIN_INFOR
    where UUID = #{uuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jw.baseframe.model.C_T_Sys_Login_InforExample" >
    delete from C_T_SYS_LOGIN_INFOR
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jw.baseframe.model.C_T_Sys_Login_Infor" >
    insert into C_T_SYS_LOGIN_INFOR (UUID, LOGIN_USER_NAME, 
      USER_DEPT_ID, LOGIN_TIME, LOGIN_IP, 
      LOGIN_MACADDRESS, EXPAND_XML, 
      UNITID, IS_DELETE, CREATE_USER, 
      CREATE_TIME, UPDATE_USER, UPDATE_TIME
      )
    values (#{record.uuid,jdbcType=VARCHAR}, #{record.loginUserName,jdbcType=NVARCHAR}, 
      #{record.userDeptId,jdbcType=VARCHAR}, #{record.loginTime,jdbcType=VARCHAR}, #{record.loginIp,jdbcType=VARCHAR}, 
      #{record.loginMacaddress,jdbcType=VARCHAR}, #{record.expandXml,jdbcType=NVARCHAR}, 
      #{record.unitid,jdbcType=VARCHAR}, #{record.isDelete,jdbcType=DECIMAL}, #{record.createUser,jdbcType=VARCHAR}, 
      #{record.createTime,jdbcType=VARCHAR}, #{record.updateUser,jdbcType=VARCHAR}, #{record.updateTime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jw.baseframe.model.C_T_Sys_Login_Infor" >
    insert into C_T_SYS_LOGIN_INFOR
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="record.uuid != null" >
        UUID,
      </if>
      <if test="record.loginUserName != null" >
        LOGIN_USER_NAME,
      </if>
      <if test="record.userDeptId != null" >
        USER_DEPT_ID,
      </if>
      <if test="record.loginTime != null" >
        LOGIN_TIME,
      </if>
      <if test="record.loginIp != null" >
        LOGIN_IP,
      </if>
      <if test="record.loginMacaddress != null" >
        LOGIN_MACADDRESS,
      </if>
      <if test="record.expandXml != null" >
        EXPAND_XML,
      </if>
      <if test="record.unitid != null" >
        UNITID,
      </if>
      <if test="record.isDelete != null" >
        IS_DELETE,
      </if>
      <if test="record.createUser != null" >
        CREATE_USER,
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME,
      </if>
      <if test="record.updateUser != null" >
        UPDATE_USER,
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="record.uuid != null" >
        #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.loginUserName != null" >
        #{record.loginUserName,jdbcType=NVARCHAR},
      </if>
      <if test="record.userDeptId != null" >
        #{record.userDeptId,jdbcType=VARCHAR},
      </if>
      <if test="record.loginTime != null" >
        #{record.loginTime,jdbcType=VARCHAR},
      </if>
      <if test="record.loginIp != null" >
        #{record.loginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.loginMacaddress != null" >
        #{record.loginMacaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.expandXml != null" >
        #{record.expandXml,jdbcType=NVARCHAR},
      </if>
      <if test="record.unitid != null" >
        #{record.unitid,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null" >
        #{record.isDelete,jdbcType=DECIMAL},
      </if>
      <if test="record.createUser != null" >
        #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null" >
        #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        #{record.updateTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jw.baseframe.model.C_T_Sys_Login_InforExample" resultType="java.lang.Integer" >
    select count(*) from C_T_SYS_LOGIN_INFOR
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update C_T_SYS_LOGIN_INFOR
    <set >
      <if test="record.uuid != null" >
        UUID = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.loginUserName != null" >
        LOGIN_USER_NAME = #{record.loginUserName,jdbcType=NVARCHAR},
      </if>
      <if test="record.userDeptId != null" >
        USER_DEPT_ID = #{record.userDeptId,jdbcType=VARCHAR},
      </if>
      <if test="record.loginTime != null" >
        LOGIN_TIME = #{record.loginTime,jdbcType=VARCHAR},
      </if>
      <if test="record.loginIp != null" >
        LOGIN_IP = #{record.loginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.loginMacaddress != null" >
        LOGIN_MACADDRESS = #{record.loginMacaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.expandXml != null" >
        EXPAND_XML = #{record.expandXml,jdbcType=NVARCHAR},
      </if>
      <if test="record.unitid != null" >
        UNITID = #{record.unitid,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null" >
        IS_DELETE = #{record.isDelete,jdbcType=DECIMAL},
      </if>
      <if test="record.createUser != null" >
        CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null" >
        UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update C_T_SYS_LOGIN_INFOR
    set UUID = #{record.uuid,jdbcType=VARCHAR},
      LOGIN_USER_NAME = #{record.loginUserName,jdbcType=NVARCHAR},
      USER_DEPT_ID = #{record.userDeptId,jdbcType=VARCHAR},
      LOGIN_TIME = #{record.loginTime,jdbcType=VARCHAR},
      LOGIN_IP = #{record.loginIp,jdbcType=VARCHAR},
      LOGIN_MACADDRESS = #{record.loginMacaddress,jdbcType=VARCHAR},
      EXPAND_XML = #{record.expandXml,jdbcType=NVARCHAR},
      UNITID = #{record.unitid,jdbcType=VARCHAR},
      IS_DELETE = #{record.isDelete,jdbcType=DECIMAL},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jw.baseframe.model.C_T_Sys_Login_Infor" >
    update C_T_SYS_LOGIN_INFOR
    <set >
      <if test="record.loginUserName != null" >
        LOGIN_USER_NAME = #{record.loginUserName,jdbcType=NVARCHAR},
      </if>
      <if test="record.userDeptId != null" >
        USER_DEPT_ID = #{record.userDeptId,jdbcType=VARCHAR},
      </if>
      <if test="record.loginTime != null" >
        LOGIN_TIME = #{record.loginTime,jdbcType=VARCHAR},
      </if>
      <if test="record.loginIp != null" >
        LOGIN_IP = #{record.loginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.loginMacaddress != null" >
        LOGIN_MACADDRESS = #{record.loginMacaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.expandXml != null" >
        EXPAND_XML = #{record.expandXml,jdbcType=NVARCHAR},
      </if>
      <if test="record.unitid != null" >
        UNITID = #{record.unitid,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null" >
        IS_DELETE = #{record.isDelete,jdbcType=DECIMAL},
      </if>
      <if test="record.createUser != null" >
        CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null" >
        UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=VARCHAR},
      </if>
    </set>
    where UUID = #{record.uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jw.baseframe.model.C_T_Sys_Login_Infor" >
    update C_T_SYS_LOGIN_INFOR
    set LOGIN_USER_NAME = #{record.loginUserName,jdbcType=NVARCHAR},
      USER_DEPT_ID = #{record.userDeptId,jdbcType=VARCHAR},
      LOGIN_TIME = #{record.loginTime,jdbcType=VARCHAR},
      LOGIN_IP = #{record.loginIp,jdbcType=VARCHAR},
      LOGIN_MACADDRESS = #{record.loginMacaddress,jdbcType=VARCHAR},
      EXPAND_XML = #{record.expandXml,jdbcType=NVARCHAR},
      UNITID = #{record.unitid,jdbcType=VARCHAR},
      IS_DELETE = #{record.isDelete,jdbcType=DECIMAL},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=VARCHAR}
    where UUID = #{record.uuid,jdbcType=VARCHAR}
  </update>
</mapper>