<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jw.magicbpm.dao.documentmanagement.B_T_Flow_FileOutMapper" >
  <resultMap id="BaseResultMap" type="com.jw.magicbpm.model.documentmanagement.B_T_Flow_FileOut" >
    <id column="UUID" property="uuid" jdbcType="VARCHAR" />
    <result column="FILEOUT_RECORDTYPEID" property="fileoutRecordtypeid" jdbcType="VARCHAR" />
    <result column="FILEOUT_YEAR" property="fileoutYear" jdbcType="VARCHAR" />
    <result column="FILEOUT_SERIAL" property="fileoutSerial" jdbcType="VARCHAR" />
    <result column="FILEOUT_URGENCY" property="fileoutUrgency" jdbcType="VARCHAR" />
    <result column="FILEOUT_SECRETLEVEL" property="fileoutSecretlevel" jdbcType="VARCHAR" />
    <result column="FILEOUT_ISPUBLISH" property="fileoutIspublish" jdbcType="VARCHAR" />
    <result column="FILEOUT_DRAFTER" property="fileoutDrafter" jdbcType="NVARCHAR" />
    <result column="FILEOUT_DRAFT_DATE" property="fileoutDraftDate" jdbcType="VARCHAR" />
    <result column="FILEOUT_TITLE" property="fileoutTitle" jdbcType="NVARCHAR" />
    <result column="FILEOUT_DEPTMENTMAIN" property="fileoutDeptmentmain" jdbcType="NVARCHAR" />
    <result column="FILEOUT_CARBONCOPY" property="fileoutCarboncopy" jdbcType="NVARCHAR" />
    <result column="FILEOUT_SUBJECTWORDS" property="fileoutSubjectwords" jdbcType="NVARCHAR" />
    <result column="FILEOUT_DRAFT" property="fileoutDraft" jdbcType="NVARCHAR" />
    <result column="FILEOUT_CHECKER" property="fileoutChecker" jdbcType="NVARCHAR" />
    <result column="FILEOUT_PRINTDATE" property="fileoutPrintdate" jdbcType="VARCHAR" />
    <result column="FILEOUT_CONTENTURL" property="fileoutContenturl" jdbcType="VARCHAR" />
    <result column="FILEOUT_PORTIONS" property="fileoutPortions" jdbcType="NVARCHAR" />
    <result column="EXPAND_XML" property="expandXml" jdbcType="NVARCHAR" />
    <result column="UNITID" property="unitid" jdbcType="VARCHAR" />
    <result column="IS_DELETE" property="isDelete" jdbcType="DECIMAL" />
    <result column="CREATE_USER" property="createUser" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="UPDATE_USER" property="updateUser" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    UUID, FILEOUT_RECORDTYPEID, FILEOUT_YEAR, FILEOUT_SERIAL, FILEOUT_URGENCY, FILEOUT_SECRETLEVEL, 
    FILEOUT_ISPUBLISH, FILEOUT_DRAFTER, FILEOUT_DRAFT_DATE, FILEOUT_TITLE, FILEOUT_DEPTMENTMAIN, 
    FILEOUT_CARBONCOPY, FILEOUT_SUBJECTWORDS, FILEOUT_DRAFT, FILEOUT_CHECKER, FILEOUT_PRINTDATE, 
    FILEOUT_CONTENTURL, FILEOUT_PORTIONS, EXPAND_XML, UNITID, IS_DELETE, CREATE_USER, 
    CREATE_TIME, UPDATE_USER, UPDATE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jw.magicbpm.model.documentmanagement.B_T_Flow_FileOutExample" >
    <foreach collection="example.oredCriteria" item="criteria" separator="or" />
    <if test="criteria.valid" >
      <foreach collection="criteria.criteria" item="criterion" >
        <if test="criterion.limitValue" >
          SELECT 
          <include refid="Base_Column_List" />
           FROM ( SELECT A.
          <include refid="Base_Column_List" />
           , ROWNUM AS con FROM ( 
        </if>
      </foreach>
    </if>
    select
    <if test="example.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from B_T_FLOW_FILEOUT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
    <if test="criteria.valid" >
      <foreach collection="criteria.criteria" item="criterion" >
        <if test="criterion.limitValue" >
           ) A  <![CDATA[WHERE ROWNUM <= ${criterion.secondValue}]]> ) B <![CDATA[WHERE B.con >= ${criterion.value} ]]>
        </if>
      </foreach>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from B_T_FLOW_FILEOUT
    where UUID = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from B_T_FLOW_FILEOUT
    where UUID = #{uuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jw.magicbpm.model.documentmanagement.B_T_Flow_FileOutExample" >
    delete from B_T_FLOW_FILEOUT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jw.magicbpm.model.documentmanagement.B_T_Flow_FileOut" >
    insert into B_T_FLOW_FILEOUT (UUID, FILEOUT_RECORDTYPEID, 
      FILEOUT_YEAR, FILEOUT_SERIAL, 
      FILEOUT_URGENCY, FILEOUT_SECRETLEVEL, 
      FILEOUT_ISPUBLISH, FILEOUT_DRAFTER, 
      FILEOUT_DRAFT_DATE, FILEOUT_TITLE, 
      FILEOUT_DEPTMENTMAIN, FILEOUT_CARBONCOPY, 
      FILEOUT_SUBJECTWORDS, FILEOUT_DRAFT, 
      FILEOUT_CHECKER, FILEOUT_PRINTDATE, 
      FILEOUT_CONTENTURL, FILEOUT_PORTIONS, 
      EXPAND_XML, UNITID, IS_DELETE, 
      CREATE_USER, CREATE_TIME, UPDATE_USER, 
      UPDATE_TIME)
    values (#{record.uuid,jdbcType=VARCHAR}, #{record.fileoutRecordtypeid,jdbcType=VARCHAR}, 
      #{record.fileoutYear,jdbcType=VARCHAR}, #{record.fileoutSerial,jdbcType=VARCHAR}, 
      #{record.fileoutUrgency,jdbcType=VARCHAR}, #{record.fileoutSecretlevel,jdbcType=VARCHAR}, 
      #{record.fileoutIspublish,jdbcType=VARCHAR}, #{record.fileoutDrafter,jdbcType=NVARCHAR}, 
      #{record.fileoutDraftDate,jdbcType=VARCHAR}, #{record.fileoutTitle,jdbcType=NVARCHAR}, 
      #{record.fileoutDeptmentmain,jdbcType=NVARCHAR}, #{record.fileoutCarboncopy,jdbcType=NVARCHAR}, 
      #{record.fileoutSubjectwords,jdbcType=NVARCHAR}, #{record.fileoutDraft,jdbcType=NVARCHAR}, 
      #{record.fileoutChecker,jdbcType=NVARCHAR}, #{record.fileoutPrintdate,jdbcType=VARCHAR}, 
      #{record.fileoutContenturl,jdbcType=VARCHAR}, #{record.fileoutPortions,jdbcType=NVARCHAR}, 
      #{record.expandXml,jdbcType=NVARCHAR}, #{record.unitid,jdbcType=VARCHAR}, #{record.isDelete,jdbcType=DECIMAL}, 
      #{record.createUser,jdbcType=VARCHAR}, #{record.createTime,jdbcType=VARCHAR}, #{record.updateUser,jdbcType=VARCHAR}, 
      #{record.updateTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jw.magicbpm.model.documentmanagement.B_T_Flow_FileOut" >
    insert into B_T_FLOW_FILEOUT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="record.uuid != null" >
        UUID,
      </if>
      <if test="record.fileoutRecordtypeid != null" >
        FILEOUT_RECORDTYPEID,
      </if>
      <if test="record.fileoutYear != null" >
        FILEOUT_YEAR,
      </if>
      <if test="record.fileoutSerial != null" >
        FILEOUT_SERIAL,
      </if>
      <if test="record.fileoutUrgency != null" >
        FILEOUT_URGENCY,
      </if>
      <if test="record.fileoutSecretlevel != null" >
        FILEOUT_SECRETLEVEL,
      </if>
      <if test="record.fileoutIspublish != null" >
        FILEOUT_ISPUBLISH,
      </if>
      <if test="record.fileoutDrafter != null" >
        FILEOUT_DRAFTER,
      </if>
      <if test="record.fileoutDraftDate != null" >
        FILEOUT_DRAFT_DATE,
      </if>
      <if test="record.fileoutTitle != null" >
        FILEOUT_TITLE,
      </if>
      <if test="record.fileoutDeptmentmain != null" >
        FILEOUT_DEPTMENTMAIN,
      </if>
      <if test="record.fileoutCarboncopy != null" >
        FILEOUT_CARBONCOPY,
      </if>
      <if test="record.fileoutSubjectwords != null" >
        FILEOUT_SUBJECTWORDS,
      </if>
      <if test="record.fileoutDraft != null" >
        FILEOUT_DRAFT,
      </if>
      <if test="record.fileoutChecker != null" >
        FILEOUT_CHECKER,
      </if>
      <if test="record.fileoutPrintdate != null" >
        FILEOUT_PRINTDATE,
      </if>
      <if test="record.fileoutContenturl != null" >
        FILEOUT_CONTENTURL,
      </if>
      <if test="record.fileoutPortions != null" >
        FILEOUT_PORTIONS,
      </if>
      <if test="record.expandXml != null" >
        EXPAND_XML,
      </if>
      <if test="record.unitid != null" >
        UNITID,
      </if>
      <if test="record.isDelete != null" >
        IS_DELETE,
      </if>
      <if test="record.createUser != null" >
        CREATE_USER,
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME,
      </if>
      <if test="record.updateUser != null" >
        UPDATE_USER,
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="record.uuid != null" >
        #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutRecordtypeid != null" >
        #{record.fileoutRecordtypeid,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutYear != null" >
        #{record.fileoutYear,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutSerial != null" >
        #{record.fileoutSerial,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutUrgency != null" >
        #{record.fileoutUrgency,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutSecretlevel != null" >
        #{record.fileoutSecretlevel,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutIspublish != null" >
        #{record.fileoutIspublish,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutDrafter != null" >
        #{record.fileoutDrafter,jdbcType=NVARCHAR},
      </if>
      <if test="record.fileoutDraftDate != null" >
        #{record.fileoutDraftDate,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutTitle != null" >
        #{record.fileoutTitle,jdbcType=NVARCHAR},
      </if>
      <if test="record.fileoutDeptmentmain != null" >
        #{record.fileoutDeptmentmain,jdbcType=NVARCHAR},
      </if>
      <if test="record.fileoutCarboncopy != null" >
        #{record.fileoutCarboncopy,jdbcType=NVARCHAR},
      </if>
      <if test="record.fileoutSubjectwords != null" >
        #{record.fileoutSubjectwords,jdbcType=NVARCHAR},
      </if>
      <if test="record.fileoutDraft != null" >
        #{record.fileoutDraft,jdbcType=NVARCHAR},
      </if>
      <if test="record.fileoutChecker != null" >
        #{record.fileoutChecker,jdbcType=NVARCHAR},
      </if>
      <if test="record.fileoutPrintdate != null" >
        #{record.fileoutPrintdate,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutContenturl != null" >
        #{record.fileoutContenturl,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutPortions != null" >
        #{record.fileoutPortions,jdbcType=NVARCHAR},
      </if>
      <if test="record.expandXml != null" >
        #{record.expandXml,jdbcType=NVARCHAR},
      </if>
      <if test="record.unitid != null" >
        #{record.unitid,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null" >
        #{record.isDelete,jdbcType=DECIMAL},
      </if>
      <if test="record.createUser != null" >
        #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null" >
        #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        #{record.updateTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jw.magicbpm.model.documentmanagement.B_T_Flow_FileOutExample" resultType="java.lang.Integer" >
    select count(*) from B_T_FLOW_FILEOUT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update B_T_FLOW_FILEOUT
    <set >
      <if test="record.uuid != null" >
        UUID = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutRecordtypeid != null" >
        FILEOUT_RECORDTYPEID = #{record.fileoutRecordtypeid,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutYear != null" >
        FILEOUT_YEAR = #{record.fileoutYear,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutSerial != null" >
        FILEOUT_SERIAL = #{record.fileoutSerial,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutUrgency != null" >
        FILEOUT_URGENCY = #{record.fileoutUrgency,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutSecretlevel != null" >
        FILEOUT_SECRETLEVEL = #{record.fileoutSecretlevel,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutIspublish != null" >
        FILEOUT_ISPUBLISH = #{record.fileoutIspublish,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutDrafter != null" >
        FILEOUT_DRAFTER = #{record.fileoutDrafter,jdbcType=NVARCHAR},
      </if>
      <if test="record.fileoutDraftDate != null" >
        FILEOUT_DRAFT_DATE = #{record.fileoutDraftDate,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutTitle != null" >
        FILEOUT_TITLE = #{record.fileoutTitle,jdbcType=NVARCHAR},
      </if>
      <if test="record.fileoutDeptmentmain != null" >
        FILEOUT_DEPTMENTMAIN = #{record.fileoutDeptmentmain,jdbcType=NVARCHAR},
      </if>
      <if test="record.fileoutCarboncopy != null" >
        FILEOUT_CARBONCOPY = #{record.fileoutCarboncopy,jdbcType=NVARCHAR},
      </if>
      <if test="record.fileoutSubjectwords != null" >
        FILEOUT_SUBJECTWORDS = #{record.fileoutSubjectwords,jdbcType=NVARCHAR},
      </if>
      <if test="record.fileoutDraft != null" >
        FILEOUT_DRAFT = #{record.fileoutDraft,jdbcType=NVARCHAR},
      </if>
      <if test="record.fileoutChecker != null" >
        FILEOUT_CHECKER = #{record.fileoutChecker,jdbcType=NVARCHAR},
      </if>
      <if test="record.fileoutPrintdate != null" >
        FILEOUT_PRINTDATE = #{record.fileoutPrintdate,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutContenturl != null" >
        FILEOUT_CONTENTURL = #{record.fileoutContenturl,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutPortions != null" >
        FILEOUT_PORTIONS = #{record.fileoutPortions,jdbcType=NVARCHAR},
      </if>
      <if test="record.expandXml != null" >
        EXPAND_XML = #{record.expandXml,jdbcType=NVARCHAR},
      </if>
      <if test="record.unitid != null" >
        UNITID = #{record.unitid,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null" >
        IS_DELETE = #{record.isDelete,jdbcType=DECIMAL},
      </if>
      <if test="record.createUser != null" >
        CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null" >
        UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update B_T_FLOW_FILEOUT
    set UUID = #{record.uuid,jdbcType=VARCHAR},
      FILEOUT_RECORDTYPEID = #{record.fileoutRecordtypeid,jdbcType=VARCHAR},
      FILEOUT_YEAR = #{record.fileoutYear,jdbcType=VARCHAR},
      FILEOUT_SERIAL = #{record.fileoutSerial,jdbcType=VARCHAR},
      FILEOUT_URGENCY = #{record.fileoutUrgency,jdbcType=VARCHAR},
      FILEOUT_SECRETLEVEL = #{record.fileoutSecretlevel,jdbcType=VARCHAR},
      FILEOUT_ISPUBLISH = #{record.fileoutIspublish,jdbcType=VARCHAR},
      FILEOUT_DRAFTER = #{record.fileoutDrafter,jdbcType=NVARCHAR},
      FILEOUT_DRAFT_DATE = #{record.fileoutDraftDate,jdbcType=VARCHAR},
      FILEOUT_TITLE = #{record.fileoutTitle,jdbcType=NVARCHAR},
      FILEOUT_DEPTMENTMAIN = #{record.fileoutDeptmentmain,jdbcType=NVARCHAR},
      FILEOUT_CARBONCOPY = #{record.fileoutCarboncopy,jdbcType=NVARCHAR},
      FILEOUT_SUBJECTWORDS = #{record.fileoutSubjectwords,jdbcType=NVARCHAR},
      FILEOUT_DRAFT = #{record.fileoutDraft,jdbcType=NVARCHAR},
      FILEOUT_CHECKER = #{record.fileoutChecker,jdbcType=NVARCHAR},
      FILEOUT_PRINTDATE = #{record.fileoutPrintdate,jdbcType=VARCHAR},
      FILEOUT_CONTENTURL = #{record.fileoutContenturl,jdbcType=VARCHAR},
      FILEOUT_PORTIONS = #{record.fileoutPortions,jdbcType=NVARCHAR},
      EXPAND_XML = #{record.expandXml,jdbcType=NVARCHAR},
      UNITID = #{record.unitid,jdbcType=VARCHAR},
      IS_DELETE = #{record.isDelete,jdbcType=DECIMAL},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jw.magicbpm.model.documentmanagement.B_T_Flow_FileOut" >
    update B_T_FLOW_FILEOUT
    <set >
      <if test="record.fileoutRecordtypeid != null" >
        FILEOUT_RECORDTYPEID = #{record.fileoutRecordtypeid,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutYear != null" >
        FILEOUT_YEAR = #{record.fileoutYear,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutSerial != null" >
        FILEOUT_SERIAL = #{record.fileoutSerial,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutUrgency != null" >
        FILEOUT_URGENCY = #{record.fileoutUrgency,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutSecretlevel != null" >
        FILEOUT_SECRETLEVEL = #{record.fileoutSecretlevel,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutIspublish != null" >
        FILEOUT_ISPUBLISH = #{record.fileoutIspublish,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutDrafter != null" >
        FILEOUT_DRAFTER = #{record.fileoutDrafter,jdbcType=NVARCHAR},
      </if>
      <if test="record.fileoutDraftDate != null" >
        FILEOUT_DRAFT_DATE = #{record.fileoutDraftDate,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutTitle != null" >
        FILEOUT_TITLE = #{record.fileoutTitle,jdbcType=NVARCHAR},
      </if>
      <if test="record.fileoutDeptmentmain != null" >
        FILEOUT_DEPTMENTMAIN = #{record.fileoutDeptmentmain,jdbcType=NVARCHAR},
      </if>
      <if test="record.fileoutCarboncopy != null" >
        FILEOUT_CARBONCOPY = #{record.fileoutCarboncopy,jdbcType=NVARCHAR},
      </if>
      <if test="record.fileoutSubjectwords != null" >
        FILEOUT_SUBJECTWORDS = #{record.fileoutSubjectwords,jdbcType=NVARCHAR},
      </if>
      <if test="record.fileoutDraft != null" >
        FILEOUT_DRAFT = #{record.fileoutDraft,jdbcType=NVARCHAR},
      </if>
      <if test="record.fileoutChecker != null" >
        FILEOUT_CHECKER = #{record.fileoutChecker,jdbcType=NVARCHAR},
      </if>
      <if test="record.fileoutPrintdate != null" >
        FILEOUT_PRINTDATE = #{record.fileoutPrintdate,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutContenturl != null" >
        FILEOUT_CONTENTURL = #{record.fileoutContenturl,jdbcType=VARCHAR},
      </if>
      <if test="record.fileoutPortions != null" >
        FILEOUT_PORTIONS = #{record.fileoutPortions,jdbcType=NVARCHAR},
      </if>
      <if test="record.expandXml != null" >
        EXPAND_XML = #{record.expandXml,jdbcType=NVARCHAR},
      </if>
      <if test="record.unitid != null" >
        UNITID = #{record.unitid,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null" >
        IS_DELETE = #{record.isDelete,jdbcType=DECIMAL},
      </if>
      <if test="record.createUser != null" >
        CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null" >
        UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=VARCHAR},
      </if>
    </set>
    where UUID = #{record.uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jw.magicbpm.model.documentmanagement.B_T_Flow_FileOut" >
    update B_T_FLOW_FILEOUT
    set FILEOUT_RECORDTYPEID = #{record.fileoutRecordtypeid,jdbcType=VARCHAR},
      FILEOUT_YEAR = #{record.fileoutYear,jdbcType=VARCHAR},
      FILEOUT_SERIAL = #{record.fileoutSerial,jdbcType=VARCHAR},
      FILEOUT_URGENCY = #{record.fileoutUrgency,jdbcType=VARCHAR},
      FILEOUT_SECRETLEVEL = #{record.fileoutSecretlevel,jdbcType=VARCHAR},
      FILEOUT_ISPUBLISH = #{record.fileoutIspublish,jdbcType=VARCHAR},
      FILEOUT_DRAFTER = #{record.fileoutDrafter,jdbcType=NVARCHAR},
      FILEOUT_DRAFT_DATE = #{record.fileoutDraftDate,jdbcType=VARCHAR},
      FILEOUT_TITLE = #{record.fileoutTitle,jdbcType=NVARCHAR},
      FILEOUT_DEPTMENTMAIN = #{record.fileoutDeptmentmain,jdbcType=NVARCHAR},
      FILEOUT_CARBONCOPY = #{record.fileoutCarboncopy,jdbcType=NVARCHAR},
      FILEOUT_SUBJECTWORDS = #{record.fileoutSubjectwords,jdbcType=NVARCHAR},
      FILEOUT_DRAFT = #{record.fileoutDraft,jdbcType=NVARCHAR},
      FILEOUT_CHECKER = #{record.fileoutChecker,jdbcType=NVARCHAR},
      FILEOUT_PRINTDATE = #{record.fileoutPrintdate,jdbcType=VARCHAR},
      FILEOUT_CONTENTURL = #{record.fileoutContenturl,jdbcType=VARCHAR},
      FILEOUT_PORTIONS = #{record.fileoutPortions,jdbcType=NVARCHAR},
      EXPAND_XML = #{record.expandXml,jdbcType=NVARCHAR},
      UNITID = #{record.unitid,jdbcType=VARCHAR},
      IS_DELETE = #{record.isDelete,jdbcType=DECIMAL},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=VARCHAR}
    where UUID = #{record.uuid,jdbcType=VARCHAR}
  </update>
</mapper>