<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jw.magicbpm.dao.publicinformation.B_V_Flow_MeetingserviceMapper" >
  <resultMap id="BaseResultMap" type="com.jw.magicbpm.model.publicinformation.B_V_Flow_Meetingservice" >
    <result column="UUID" property="uuid" jdbcType="VARCHAR" />
    <result column="APPLICANTPERSON" property="applicantperson" jdbcType="VARCHAR" />
    <result column="APPLICANTTIME" property="applicanttime" jdbcType="VARCHAR" />
    <result column="RESERVATIONNUM" property="reservationnum" jdbcType="DECIMAL" />
    <result column="CONTACT" property="contact" jdbcType="VARCHAR" />
    <result column="STARTTIME" property="starttime" jdbcType="VARCHAR" />
    <result column="ENDTIME" property="endtime" jdbcType="VARCHAR" />
    <result column="DEPTNAME" property="deptname" jdbcType="VARCHAR" />
    <result column="MEETINGROOM_ID" property="meetingroomId" jdbcType="VARCHAR" />
    <result column="MEETINGROOM_NAME" property="meetingroomName" jdbcType="VARCHAR" />
    <result column="MEETINGTITLE" property="meetingtitle" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="UNITID" property="unitid" jdbcType="VARCHAR" />
    <result column="CREATE_USER" property="createUser" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="VARCHAR" />
    <result column="CUR_TACHE_NAME" property="curTacheName" jdbcType="NVARCHAR" />
    <result column="TACHE_TRANSACTOR_BACKUP_SHOW" property="tacheTransactorBackupShow" jdbcType="NVARCHAR" />
    <result column="TACHE_TRANSACTOR_BACKUP" property="tacheTransactorBackup" jdbcType="VARCHAR" />
    <result column="IS_FINISHED" property="isFinished" jdbcType="DECIMAL" />
    <result column="MODULE_ID" property="moduleId" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.jw.magicbpm.model.publicinformation.B_V_Flow_MeetingserviceWithBLOBs" extends="BaseResultMap" >
    <result column="PASSER_READED" property="passerReaded" jdbcType="CLOB" />
    <result column="PASSER_UNREAD" property="passerUnread" jdbcType="CLOB" />
    <result column="TACHEUSER" property="tacheuser" jdbcType="CLOB" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    UUID, APPLICANTPERSON, APPLICANTTIME, RESERVATIONNUM, CONTACT, STARTTIME, ENDTIME, 
    DEPTNAME, MEETINGROOM_ID, MEETINGROOM_NAME, MEETINGTITLE, STATUS, UNITID, CREATE_USER, 
    CREATE_TIME, UPDATE_TIME, CUR_TACHE_NAME, TACHE_TRANSACTOR_BACKUP_SHOW, TACHE_TRANSACTOR_BACKUP, 
    IS_FINISHED, MODULE_ID
  </sql>
  <sql id="Blob_Column_List" >
    PASSER_READED, PASSER_UNREAD, TACHEUSER
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.jw.magicbpm.model.publicinformation.B_V_Flow_MeetingserviceExample" >
    select
    <if test="example.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from B_V_FLOW_MEETINGSERVICE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jw.magicbpm.model.publicinformation.B_V_Flow_MeetingserviceExample" >
    <foreach collection="example.oredCriteria" item="criteria" separator="or" />
    <if test="criteria.valid" >
      <foreach collection="criteria.criteria" item="criterion" >
        <if test="criterion.limitValue" >
          SELECT 
          <include refid="Base_Column_List" />
           FROM ( SELECT A.
          <include refid="Base_Column_List" />
           , ROWNUM AS con FROM ( 
        </if>
      </foreach>
    </if>
    select
    <if test="example.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from B_V_FLOW_MEETINGSERVICE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
    <if test="criteria.valid" >
      <foreach collection="criteria.criteria" item="criterion" >
        <if test="criterion.limitValue" >
           ) A  <![CDATA[WHERE ROWNUM <= ${criterion.secondValue}]]> ) B <![CDATA[WHERE B.con >= ${criterion.value} ]]>
        </if>
      </foreach>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.jw.magicbpm.model.publicinformation.B_V_Flow_MeetingserviceExample" >
    delete from B_V_FLOW_MEETINGSERVICE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jw.magicbpm.model.publicinformation.B_V_Flow_MeetingserviceWithBLOBs" >
    insert into B_V_FLOW_MEETINGSERVICE (UUID, APPLICANTPERSON, 
      APPLICANTTIME, RESERVATIONNUM, 
      CONTACT, STARTTIME, ENDTIME, 
      DEPTNAME, MEETINGROOM_ID, 
      MEETINGROOM_NAME, MEETINGTITLE, 
      STATUS, UNITID, CREATE_USER, 
      CREATE_TIME, UPDATE_TIME, CUR_TACHE_NAME, 
      TACHE_TRANSACTOR_BACKUP_SHOW, TACHE_TRANSACTOR_BACKUP, 
      IS_FINISHED, MODULE_ID, PASSER_READED, 
      PASSER_UNREAD, TACHEUSER)
    values (#{record.uuid,jdbcType=VARCHAR}, #{record.applicantperson,jdbcType=VARCHAR}, 
      #{record.applicanttime,jdbcType=VARCHAR}, #{record.reservationnum,jdbcType=DECIMAL}, 
      #{record.contact,jdbcType=VARCHAR}, #{record.starttime,jdbcType=VARCHAR}, #{record.endtime,jdbcType=VARCHAR}, 
      #{record.deptname,jdbcType=VARCHAR}, #{record.meetingroomId,jdbcType=VARCHAR}, 
      #{record.meetingroomName,jdbcType=VARCHAR}, #{record.meetingtitle,jdbcType=VARCHAR}, 
      #{record.status,jdbcType=VARCHAR}, #{record.unitid,jdbcType=VARCHAR}, #{record.createUser,jdbcType=VARCHAR}, 
      #{record.createTime,jdbcType=VARCHAR}, #{record.updateTime,jdbcType=VARCHAR}, #{record.curTacheName,jdbcType=NVARCHAR}, 
      #{record.tacheTransactorBackupShow,jdbcType=NVARCHAR}, #{record.tacheTransactorBackup,jdbcType=VARCHAR}, 
      #{record.isFinished,jdbcType=DECIMAL}, #{record.moduleId,jdbcType=VARCHAR}, #{record.passerReaded,jdbcType=CLOB}, 
      #{record.passerUnread,jdbcType=CLOB}, #{record.tacheuser,jdbcType=CLOB})
  </insert>
  <insert id="insertSelective" parameterType="com.jw.magicbpm.model.publicinformation.B_V_Flow_MeetingserviceWithBLOBs" >
    insert into B_V_FLOW_MEETINGSERVICE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="record.uuid != null" >
        UUID,
      </if>
      <if test="record.applicantperson != null" >
        APPLICANTPERSON,
      </if>
      <if test="record.applicanttime != null" >
        APPLICANTTIME,
      </if>
      <if test="record.reservationnum != null" >
        RESERVATIONNUM,
      </if>
      <if test="record.contact != null" >
        CONTACT,
      </if>
      <if test="record.starttime != null" >
        STARTTIME,
      </if>
      <if test="record.endtime != null" >
        ENDTIME,
      </if>
      <if test="record.deptname != null" >
        DEPTNAME,
      </if>
      <if test="record.meetingroomId != null" >
        MEETINGROOM_ID,
      </if>
      <if test="record.meetingroomName != null" >
        MEETINGROOM_NAME,
      </if>
      <if test="record.meetingtitle != null" >
        MEETINGTITLE,
      </if>
      <if test="record.status != null" >
        STATUS,
      </if>
      <if test="record.unitid != null" >
        UNITID,
      </if>
      <if test="record.createUser != null" >
        CREATE_USER,
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME,
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="record.curTacheName != null" >
        CUR_TACHE_NAME,
      </if>
      <if test="record.tacheTransactorBackupShow != null" >
        TACHE_TRANSACTOR_BACKUP_SHOW,
      </if>
      <if test="record.tacheTransactorBackup != null" >
        TACHE_TRANSACTOR_BACKUP,
      </if>
      <if test="record.isFinished != null" >
        IS_FINISHED,
      </if>
      <if test="record.moduleId != null" >
        MODULE_ID,
      </if>
      <if test="record.passerReaded != null" >
        PASSER_READED,
      </if>
      <if test="record.passerUnread != null" >
        PASSER_UNREAD,
      </if>
      <if test="record.tacheuser != null" >
        TACHEUSER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="record.uuid != null" >
        #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.applicantperson != null" >
        #{record.applicantperson,jdbcType=VARCHAR},
      </if>
      <if test="record.applicanttime != null" >
        #{record.applicanttime,jdbcType=VARCHAR},
      </if>
      <if test="record.reservationnum != null" >
        #{record.reservationnum,jdbcType=DECIMAL},
      </if>
      <if test="record.contact != null" >
        #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.starttime != null" >
        #{record.starttime,jdbcType=VARCHAR},
      </if>
      <if test="record.endtime != null" >
        #{record.endtime,jdbcType=VARCHAR},
      </if>
      <if test="record.deptname != null" >
        #{record.deptname,jdbcType=VARCHAR},
      </if>
      <if test="record.meetingroomId != null" >
        #{record.meetingroomId,jdbcType=VARCHAR},
      </if>
      <if test="record.meetingroomName != null" >
        #{record.meetingroomName,jdbcType=VARCHAR},
      </if>
      <if test="record.meetingtitle != null" >
        #{record.meetingtitle,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.unitid != null" >
        #{record.unitid,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null" >
        #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        #{record.updateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.curTacheName != null" >
        #{record.curTacheName,jdbcType=NVARCHAR},
      </if>
      <if test="record.tacheTransactorBackupShow != null" >
        #{record.tacheTransactorBackupShow,jdbcType=NVARCHAR},
      </if>
      <if test="record.tacheTransactorBackup != null" >
        #{record.tacheTransactorBackup,jdbcType=VARCHAR},
      </if>
      <if test="record.isFinished != null" >
        #{record.isFinished,jdbcType=DECIMAL},
      </if>
      <if test="record.moduleId != null" >
        #{record.moduleId,jdbcType=VARCHAR},
      </if>
      <if test="record.passerReaded != null" >
        #{record.passerReaded,jdbcType=CLOB},
      </if>
      <if test="record.passerUnread != null" >
        #{record.passerUnread,jdbcType=CLOB},
      </if>
      <if test="record.tacheuser != null" >
        #{record.tacheuser,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jw.magicbpm.model.publicinformation.B_V_Flow_MeetingserviceExample" resultType="java.lang.Integer" >
    select count(*) from B_V_FLOW_MEETINGSERVICE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update B_V_FLOW_MEETINGSERVICE
    <set >
      <if test="record.uuid != null" >
        UUID = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.applicantperson != null" >
        APPLICANTPERSON = #{record.applicantperson,jdbcType=VARCHAR},
      </if>
      <if test="record.applicanttime != null" >
        APPLICANTTIME = #{record.applicanttime,jdbcType=VARCHAR},
      </if>
      <if test="record.reservationnum != null" >
        RESERVATIONNUM = #{record.reservationnum,jdbcType=DECIMAL},
      </if>
      <if test="record.contact != null" >
        CONTACT = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.starttime != null" >
        STARTTIME = #{record.starttime,jdbcType=VARCHAR},
      </if>
      <if test="record.endtime != null" >
        ENDTIME = #{record.endtime,jdbcType=VARCHAR},
      </if>
      <if test="record.deptname != null" >
        DEPTNAME = #{record.deptname,jdbcType=VARCHAR},
      </if>
      <if test="record.meetingroomId != null" >
        MEETINGROOM_ID = #{record.meetingroomId,jdbcType=VARCHAR},
      </if>
      <if test="record.meetingroomName != null" >
        MEETINGROOM_NAME = #{record.meetingroomName,jdbcType=VARCHAR},
      </if>
      <if test="record.meetingtitle != null" >
        MEETINGTITLE = #{record.meetingtitle,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.unitid != null" >
        UNITID = #{record.unitid,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null" >
        CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.curTacheName != null" >
        CUR_TACHE_NAME = #{record.curTacheName,jdbcType=NVARCHAR},
      </if>
      <if test="record.tacheTransactorBackupShow != null" >
        TACHE_TRANSACTOR_BACKUP_SHOW = #{record.tacheTransactorBackupShow,jdbcType=NVARCHAR},
      </if>
      <if test="record.tacheTransactorBackup != null" >
        TACHE_TRANSACTOR_BACKUP = #{record.tacheTransactorBackup,jdbcType=VARCHAR},
      </if>
      <if test="record.isFinished != null" >
        IS_FINISHED = #{record.isFinished,jdbcType=DECIMAL},
      </if>
      <if test="record.moduleId != null" >
        MODULE_ID = #{record.moduleId,jdbcType=VARCHAR},
      </if>
      <if test="record.passerReaded != null" >
        PASSER_READED = #{record.passerReaded,jdbcType=CLOB},
      </if>
      <if test="record.passerUnread != null" >
        PASSER_UNREAD = #{record.passerUnread,jdbcType=CLOB},
      </if>
      <if test="record.tacheuser != null" >
        TACHEUSER = #{record.tacheuser,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update B_V_FLOW_MEETINGSERVICE
    set UUID = #{record.uuid,jdbcType=VARCHAR},
      APPLICANTPERSON = #{record.applicantperson,jdbcType=VARCHAR},
      APPLICANTTIME = #{record.applicanttime,jdbcType=VARCHAR},
      RESERVATIONNUM = #{record.reservationnum,jdbcType=DECIMAL},
      CONTACT = #{record.contact,jdbcType=VARCHAR},
      STARTTIME = #{record.starttime,jdbcType=VARCHAR},
      ENDTIME = #{record.endtime,jdbcType=VARCHAR},
      DEPTNAME = #{record.deptname,jdbcType=VARCHAR},
      MEETINGROOM_ID = #{record.meetingroomId,jdbcType=VARCHAR},
      MEETINGROOM_NAME = #{record.meetingroomName,jdbcType=VARCHAR},
      MEETINGTITLE = #{record.meetingtitle,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=VARCHAR},
      UNITID = #{record.unitid,jdbcType=VARCHAR},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=VARCHAR},
      CUR_TACHE_NAME = #{record.curTacheName,jdbcType=NVARCHAR},
      TACHE_TRANSACTOR_BACKUP_SHOW = #{record.tacheTransactorBackupShow,jdbcType=NVARCHAR},
      TACHE_TRANSACTOR_BACKUP = #{record.tacheTransactorBackup,jdbcType=VARCHAR},
      IS_FINISHED = #{record.isFinished,jdbcType=DECIMAL},
      MODULE_ID = #{record.moduleId,jdbcType=VARCHAR},
      PASSER_READED = #{record.passerReaded,jdbcType=CLOB},
      PASSER_UNREAD = #{record.passerUnread,jdbcType=CLOB},
      TACHEUSER = #{record.tacheuser,jdbcType=CLOB}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update B_V_FLOW_MEETINGSERVICE
    set UUID = #{record.uuid,jdbcType=VARCHAR},
      APPLICANTPERSON = #{record.applicantperson,jdbcType=VARCHAR},
      APPLICANTTIME = #{record.applicanttime,jdbcType=VARCHAR},
      RESERVATIONNUM = #{record.reservationnum,jdbcType=DECIMAL},
      CONTACT = #{record.contact,jdbcType=VARCHAR},
      STARTTIME = #{record.starttime,jdbcType=VARCHAR},
      ENDTIME = #{record.endtime,jdbcType=VARCHAR},
      DEPTNAME = #{record.deptname,jdbcType=VARCHAR},
      MEETINGROOM_ID = #{record.meetingroomId,jdbcType=VARCHAR},
      MEETINGROOM_NAME = #{record.meetingroomName,jdbcType=VARCHAR},
      MEETINGTITLE = #{record.meetingtitle,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=VARCHAR},
      UNITID = #{record.unitid,jdbcType=VARCHAR},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=VARCHAR},
      CUR_TACHE_NAME = #{record.curTacheName,jdbcType=NVARCHAR},
      TACHE_TRANSACTOR_BACKUP_SHOW = #{record.tacheTransactorBackupShow,jdbcType=NVARCHAR},
      TACHE_TRANSACTOR_BACKUP = #{record.tacheTransactorBackup,jdbcType=VARCHAR},
      IS_FINISHED = #{record.isFinished,jdbcType=DECIMAL},
      MODULE_ID = #{record.moduleId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>